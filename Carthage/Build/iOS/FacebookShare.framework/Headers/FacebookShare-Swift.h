// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSCoder;


/// A button to like an object.
///
/// Tapping the receiver will invoke an API call to the Facebook app through a fast-app-switch that allows
/// the object to be liked.  Upon return to the calling app, the view will update with the new state.  If the
/// currentAccessToken has "publish_actions" permission and the object is an Open Graph object, then the like can happen
/// seamlessly without the fast-app-switch.
SWIFT_CLASS("_TtC13FacebookShare10LikeButton")
@interface LikeButton : UIView

/// If true, a sound is played when the reciever is toggled.
@property (nonatomic) BOOL isSoundEnabled;

/// Create a new LikeButton from an encoded interface file.
///
/// \param aDecoder The coder to initialize from.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;

/// Performs logic for laying out subviews.
- (void)layoutSubviews;

/// Resizes and moves the receiver view so it just encloses its subviews.
- (void)sizeToFit;

/// Asks the view to calculate and return the size that best fits the specified size.
///
/// \param size A new size that fits the receiver’s subviews.
///
/// \returns  A new size that fits the receiver’s subviews.
- (CGSize)sizeThatFits:(CGSize)size;

/// Returns the natural size for the receiving view, considering only properties of the view itself.
///
/// \returns  A size indicating the natural size for the receiving view based on its intrinsic properties.
- (CGSize)intrinsicContentSize;
@end

@class UIColor;


/// UI control to like an object in the Facebook graph.
///
/// Taps on the like button within this control will invoke an API call to the Facebook app through a fast-app-switch
/// that allows the user to like the object. Upon return to the calling app, the view will update with the new state.
SWIFT_CLASS("_TtC13FacebookShare11LikeControl")
@interface LikeControl : UIView

/// Create a new LikeControl from an encoded interface file.
///
/// \param coder The coder to initialize from.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;

/// The foreground color to use for the content of the control.
@property (nonatomic, strong) UIColor * _Nonnull foregroundColor;

/// The preferred maximum width (in points) for autolayout.
///
/// This property affects the size of the receiver when layout constraints are applied to it. During layout,
/// if the text extends beyond the width specified by this property, the additional text is flowed to one or more new
/// lines, thereby increasing the height of the receiver.
@property (nonatomic) CGFloat preferredMaxLayoutWidth;

/// If true, a sound is played when the control is toggled.
@property (nonatomic) BOOL isSoundEnabled;
@end


@interface LikeControl (SWIFT_EXTENSION(FacebookShare))
@end


@interface LikeControl (SWIFT_EXTENSION(FacebookShare))

/// Performs logic for laying out subviews.
- (void)layoutSubviews;

/// Resizes and moves the receiver view so it just encloses its subviews.
- (void)sizeToFit;

/// Asks the view to calculate and return the size that best fits the specified size.
///
/// \param size A new size that fits the receiver’s subviews.
///
/// \returns  A new size that fits the receiver’s subviews.
- (CGSize)sizeThatFits:(CGSize)size;

/// Returns the natural size for the receiving view, considering only properties of the view itself.
///
/// \returns  A size indicating the natural size for the receiving view based on its intrinsic properties.
- (CGSize)intrinsicContentSize;
@end


@interface NSNumber (SWIFT_EXTENSION(FacebookShare))

/// The bridged OpenGraph raw value.
@property (nonatomic, readonly, strong) id _Nonnull openGraphPropertyValue;
@end


@interface NSURL (SWIFT_EXTENSION(FacebookShare))

/// The bridged OpenGraph raw value.
@property (nonatomic, readonly, strong) id _Nonnull openGraphPropertyValue;
@end

#pragma clang diagnostic pop
